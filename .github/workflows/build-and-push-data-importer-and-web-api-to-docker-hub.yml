name: Docker Build and Push

on:
  push:
    branches: [ master ]

jobs:
  build-and-push-data-importer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push VGStandard.Data.Importer
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./VGStandard.Data.Importer/Dockerfile
        push: true
        tags: dakotairsik/vgstandard-data-importer:latest

    - name: Zip VGStandard.Data.Importer
      run: zip -r vgstandard-data-importer-bin.zip ./VGStandard.Data.Importer

    - name: Set Release Tag Name
      run: echo "RELEASE_TAG=$(echo master-$(date +'%m-%d-%Y'))" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        release_name: Release ${{ env.RELEASE_TAG }}
        draft: false
        prerelease: false

    - name: Upload VGStandard.Data.Importer Binary as Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./vgstandard-data-importer-bin.zip
        asset_name: vgstandard-data-importer-bin.zip
        asset_content_type: application/zip 
  build-and-push-web-api:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push VGStandard.WebAPI
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./VGStandard.WebAPI/Dockerfile
        push: true
        tags: dakotairsik/vgstandard-web-api:latest

    - name: Zip VGStandard.WebAPI
      run: zip -r vgstandard-web-api-bin.zip ./VGStandard.WebAPI

    - name: Set Release Tag Name
      run: echo "RELEASE_TAG=$(echo master-$(date +'%m-%d-%Y'))" >> $GITHUB_ENV

    - name: Upload VGStandard.WebAPI Binary as Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./vgstandard-web-api-bin.zip
        asset_name: vgstandard-web-api-bin.zip
        asset_content_type: application/zip

